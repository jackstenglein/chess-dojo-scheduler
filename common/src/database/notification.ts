import { z } from "zod";

const DojoCohortSchema = z.string()

export const NotificationTypeSchema = z.enum([
    // Notifications generated by comments on a game
    "GAME_COMMENT",

    // Notifications generated by getting a new follower
    "NEW_FOLLOWER",

    // Notifications generated by comments on a timeline entry
    "TIMELINE_COMMENT",

    // Notifications generated by emoji reactions on a timeline entry
    "TIMELINE_REACTION",

    // Notifications generated by an explorer game added to the database
    "EXPLORER_GAME",

    // Notifications generated by a new request to join a club
    "NEW_CLUB_JOIN_REQUEST",

    // Notifications generated by approval to join a club
    "CLUB_JOIN_REQUEST_APPROVED",

    // Notifications generated by a sensei game review
    "GAME_REVIEW_COMPLETE",
])

export const GameCommentMetadata = z.object({
    // The cohort of the game
    cohort: DojoCohortSchema,
    // The sort key of the game
    id: z.string(),
    // The headers of the game
    headers: z.object({}),
}).strict()

export type GameCommentMetadata = z.infer<typeof GameCommentMetadata>

export const ReviewerSchema = z.object({
    username: z.string(),
    displayName: z.string(),
    cohort: DojoCohortSchema,
}).strict()

export const GameReviewMetadata = z.object({
    // The cohort of the game
    cohort: DojoCohortSchema,
    // The sort key of the game
    id: z.string(),
    // The headers of the game
    headers: z.object({}),
    reviewer: ReviewerSchema
}).strict()

export type GameReviewMetadata = z.infer<typeof GameReviewMetadata>

// Metadata for a new follower notification.
export const NewFollowerMetadata = z.object({
    // The username of the follower
    username: z.string(),
    // The display name of the follower
    displayName: z.string(),
    // The cohort of the follower
    cohort: DojoCohortSchema,
}).strict()

export type NewFollowerMetadata = z.infer<typeof NewFollowerMetadata>

export const TimelineCommentMetadata = z.object({
    // The owner of the timeline entry
    owner: z.string(),
    // The id of the timeline entry
    id: z.string(),
    // The requirement name of the timeline entry
    name: z.string(),
}).strict();

export type TimeLineCommentMetadata = z.infer<typeof TimelineCommentMetadata>

// Metadata for an explorer game notification.
export const ExplorerGameMetadata = z.object({
    // The normalized fen of the position
    normalizedFen: z.string(),

    // The cohort of the game
    cohort: DojoCohortSchema,

    // The sort key of the game
    id: z.string(),

    // The result of the explorer game, not the result of the game
    result: z.string(),

    // The headers of the game
    headers: z.object({}),
}).strict();

export type ExplorerGameMetadata = z.infer<typeof ExplorerGameMetadata>;

// Metadata for a new request to join a club
export const ClubMetadata = z.object({
    // The id of the club
    id: z.string(),

    // The name of the club
    name: z.string()
}).strict()

export type ClubMetadata = z.infer<typeof ClubMetadata>

export const Notification = z.object({
    username: z.string(),
    type: NotificationTypeSchema,
    updatedAt: z.date(),
    count: z.number(),
    gameCommentMetadata: GameCommentMetadata.nullable(),
    gameReviewMetadata: GameReviewMetadata.nullable(),
    newFollowerMetadata: NewFollowerMetadata.nullable(),
    timelineCommentMetadata: TimelineCommentMetadata.nullable(),
    explorerGameMetadata: ExplorerGameMetadata.nullable(),
    clubMetadata: ClubMetadata.nullable()
}).strict()

export type Notification = z.infer<typeof Notification>
